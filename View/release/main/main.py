# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'yure.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import QTimer
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QMainWindow, QApplication

from Utils.Path import rootPath
from Utils.ResolutionTools import scaleSizeW, scaleSizeH, setDesktop, resolutionW
from View.custom_widget.PercentProgressBar import PercentProgressBar
from View.custom_widget.SimpleProgressBar import SimpleProgressBar, StyleSheet

# 图片所在路径
imgPath = rootPath + "/View/img"

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setStyleSheet("QMainWindow#MainWindow{border-image: url(" + imgPath + "/common/bg.png);}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        #条形进度条
        self.progressBar = SimpleProgressBar(self.centralwidget, minimum=0, maximum=100, textVisible=False,objectName="PreheatProgressBar")
        self.progressBar.setGeometry(QtCore.QRect(resolutionW()/2-358/2, scaleSizeH(510), 358, 23))
        self.progressBar.setObjectName("PreheatProgressBar")

        #圆形形进度条
        self.progressBar_2 = PercentProgressBar(self.centralwidget, showFreeArea=True)
        self.progressBar_2.setGeometry(QtCore.QRect(scaleSizeW(585), scaleSizeH(239), scaleSizeW(110), scaleSizeH(110)))
        self.progressBar_2.setObjectName("progressBar_2")

        #系统预热中
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setPixmap(QPixmap(imgPath + "/preheat/预热界面_10.png"))
        self.label.setGeometry(QtCore.QRect(scaleSizeW(573), scaleSizeH(461), scaleSizeW(152), scaleSizeH(24)))
        self.label.setObjectName("label")

        #激光接通状态
        self.label_light_switch = QtWidgets.QLabel(self.centralwidget)
        self.label_light_switch.setPixmap(QPixmap(imgPath + "/common/light_switch_false.png"))
        self.label_light_switch.setGeometry(QtCore.QRect(scaleSizeW(1023), scaleSizeH(97), scaleSizeW(190), scaleSizeH(50)))
        self.label_light_switch.setObjectName("label_light_switch")

        # 后门按钮
        self.back_door_btn = QtWidgets.QPushButton(self.centralwidget)
        self.back_door_btn.setGeometry(QtCore.QRect(scaleSizeW(1023), scaleSizeH(97), scaleSizeW(190), scaleSizeH(50)))
        self.back_door_btn.setObjectName("back_door_btn")
        # 设置按钮透明
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0)
        self.back_door_btn.setGraphicsEffect(op)
        self.back_door_btn.setAutoFillBackground(True)

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def updateValue(self):

        # 条形设值
        value_all = self.progressBar.value() + 1
        if value_all > self.progressBar.maximum():
            value_all = 0
        self.progressBar.setValue(value_all)

        #圆形设值
        self.progressBar_2.value = self.progressBar_2._value
        self.progressBar_2._value += 1
        if self.progressBar_2._value > 100:
            self.progressBar_2._value = 0

    def update_value(self, current, maximum):
        """
        更新进度条数据
        :param current: 当前值
        :param maximum: 最大值
        """
        # 更新值
        if current > maximum:
            current = maximum
        if current < 0:
            current = 0
        value = int(current * 100 / maximum)

        # 条形设值
        self.progressBar.setValue(value)
        # 圆形设值
        self.progressBar_2.value = value


class MyWindow(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)
        self.setupUi(self)

        # 动态设置进度条的值,测试用
        self._valueTimer = QTimer(self, timeout=self.updateValue)
        self._valueTimer.start(100)

if __name__ == '__main__':
    app = QApplication(sys.argv)
    desktop = QApplication.desktop()
    print("屏幕宽:" + str(desktop.width()))
    print("屏幕高:" + str(desktop.height()))
    setDesktop(desktop)

    app.setStyleSheet(StyleSheet)
    app.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)
    myWin = MyWindow()

    myWin.showFullScreen()
    sys.exit(app.exec_())
