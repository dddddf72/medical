# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'yure.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import random
import sys

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap, QFont
from PyQt5.QtWidgets import QMainWindow, QApplication

from Utils.Path import rootPath
from Utils.ResolutionTools import scaleSizeW, scaleSizeH, setDesktop
from View.custom_widget.EqualizerBar import EqualizerBar
from View.custom_widget.QssQSlider import QssQSlider, StyleSheet

# 图片所在路径
imgPath = rootPath + "/View/img"


class Ui_MainWindow(object):
    def set_steps(self, normal, warn):
        """
        设置色块
        normal + warn < 100
        :param normal: 正常区域块数
        :param warn: 警告区域块数
        """
        self.normal = normal
        self.warn = warn

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setStyleSheet("QMainWindow#MainWindow{border-image: url(" + imgPath + "/collect/bg.png);}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # 进度条
        if not hasattr(self, "normal"):
            self.normal = 20
            self.warn = 40
        self.equalizer = EqualizerBar(self)
        self.equalizer.set_steps(self.normal, self.warn)
        self.equalizer.setObjectName('equalizer')
        self.equalizer.setGeometry(QtCore.QRect(scaleSizeW(170), scaleSizeH(120), scaleSizeW(1000), scaleSizeH(130)))

        # 当前值
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setScaledContents(True)
        self.label_1.setPixmap(QPixmap(imgPath + "/collect/数值框_03.png"))
        self.label_1.setGeometry(QtCore.QRect(scaleSizeW(80), scaleSizeH(324), scaleSizeW(346), scaleSizeH(288)))
        self.label_1.setObjectName("label_1")

        # 一个数字一个label
        # 当前值第1个数字
        self.label_1_1 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_1_1,'label_1_1',
                             QtCore.QRect(scaleSizeW(107), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 当前值第2个数字
        self.label_1_2 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_1_2, 'label_1_2',
                             QtCore.QRect(scaleSizeW(165), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 当前值第3个数字
        self.label_1_3 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_1_3, 'label_1_3',
                             QtCore.QRect(scaleSizeW(231), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 当前值第4个数字
        self.label_1_4 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_1_4, 'label_1_4',
                             QtCore.QRect(scaleSizeW(289), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 当前值第5个数字
        self.label_1_5 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_1_5, 'label_1_5',
                             QtCore.QRect(scaleSizeW(347), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 基准值
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setScaledContents(True)
        self.label_2.setPixmap(QPixmap(imgPath + "/collect/数值框_05.png"))
        self.label_2.setGeometry(QtCore.QRect(scaleSizeW(499), scaleSizeH(324), scaleSizeW(346), scaleSizeH(288)))
        self.label_2.setObjectName("label_2")

        # 基准值第1个数字
        self.label_2_1 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_2_1, 'label_2_1',
                             QtCore.QRect(scaleSizeW(527), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 基准值第2个数字
        self.label_2_2 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_2_2, 'label_2_2',
                             QtCore.QRect(scaleSizeW(585), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 基准值第3个数字
        self.label_2_3 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_2_3, 'label_2_3',
                             QtCore.QRect(scaleSizeW(651), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 基准值第4个数字
        self.label_2_4 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_2_4, 'label_2_4',
                             QtCore.QRect(scaleSizeW(709), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 基准值第5个数字
        self.label_2_5 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_2_5, 'label_2_5',
                             QtCore.QRect(scaleSizeW(767), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 倍数值
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setScaledContents(True)
        self.label_3.setPixmap(QPixmap(imgPath + "/collect/数值框_07.png"))
        self.label_3.setGeometry(QtCore.QRect(scaleSizeW(921), scaleSizeH(324), scaleSizeW(272), scaleSizeH(288)))
        self.label_3.setObjectName("label_3")

        # 倍数值第1个数字
        self.label_3_1 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_3_1, 'label_3_1',
                             QtCore.QRect(scaleSizeW(951), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 倍数值第2个数字
        self.label_3_2 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_3_2, 'label_3_2',
                             QtCore.QRect(scaleSizeW(1009), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 倍数值第3个数字
        self.label_3_3 = QtWidgets.QLabel(self.centralwidget)
        self.initNumberLabel(self.label_3_3, 'label_3_3',
                             QtCore.QRect(scaleSizeW(1075), scaleSizeH(354), scaleSizeW(49), scaleSizeH(70)))

        # 音量
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setScaledContents(True)
        self.label_4.setPixmap(QPixmap(imgPath + "/collect/音量_03.png"))
        self.label_4.setGeometry(QtCore.QRect(scaleSizeW(78), scaleSizeH(566), scaleSizeW(600), scaleSizeH(100)))
        self.label_4.setObjectName("label_4")

        self.slider = QssQSlider(Qt.Horizontal, self)
        self.slider.setGeometry(QtCore.QRect(scaleSizeW(175), scaleSizeH(592), scaleSizeW(456), scaleSizeH(25)))
        self.slider.setObjectName("slider")
        self.slider.setValue(37)

        # 激光状态
        self.label_light_switch = QtWidgets.QLabel(self.centralwidget)
        self.label_light_switch.setPixmap(QPixmap(imgPath + "/common/light_switch_false.png"))
        self.label_light_switch.setGeometry(QtCore.QRect(scaleSizeW(790), scaleSizeH(591), scaleSizeW(190), scaleSizeH(50)))
        self.label_light_switch.setObjectName("label_light_switch")

        # 后门按钮
        self.back_door_btn = QtWidgets.QPushButton(self.centralwidget)
        self.back_door_btn.setGeometry(QtCore.QRect(scaleSizeW(790), scaleSizeH(591), scaleSizeW(190), scaleSizeH(50)))
        self.back_door_btn.setObjectName("back_door_btn")
        # 设置按钮透明
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0)
        self.back_door_btn.setGraphicsEffect(op)
        self.back_door_btn.setAutoFillBackground(True)

        # 连台手术
        self.continueButton = QtWidgets.QPushButton(self.centralwidget)
        self.continueButton.setObjectName("continueButton")
        self.continueButton.setGeometry(QtCore.QRect(scaleSizeW(1021), scaleSizeH(591), scaleSizeW(170), scaleSizeH(50)))
        self.continueButton.setStyleSheet(
            "QPushButton#continueButton{"
            "border-image: url(" + imgPath + "/collect/按钮_05.png);}")

        # 顶部设置按钮
        # self.button_setting = QtWidgets.QPushButton(self.centralwidget)
        # self.button_setting.setObjectName("button_setting")
        # self.button_setting.setGeometry(QtCore.QRect(scaleSizeW(1034), scaleSizeH(27), scaleSizeW(66), scaleSizeH(26)))
        # self.button_setting.setStyleSheet(
        #     "QPushButton#button_setting{"
        #     "border-image: url(" + imgPath + "/collect/切图_03.png);}")

        # 顶部关机按钮
        self.button_shut = QtWidgets.QPushButton(self.centralwidget)
        self.button_shut.setObjectName("button_shut")
        self.button_shut.setGeometry(QtCore.QRect(scaleSizeW(1034), scaleSizeH(30), scaleSizeW(66), scaleSizeH(26)))
        self.button_shut.setStyleSheet(
            "QPushButton#button_shut{"
            "border-image: url(" + imgPath + "/common/shut.png);}")

        # 顶部帮助按钮
        self.button_help = QtWidgets.QPushButton(self.centralwidget)
        self.button_help.setObjectName("button_help")
        self.button_help.setGeometry(QtCore.QRect(scaleSizeW(1150), scaleSizeH(27), scaleSizeW(66), scaleSizeH(26)))
        self.button_help.setStyleSheet(
            "QPushButton#button_help{"
            "border-image: url(" + imgPath + "/collect/切图_03.png);}")

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # 初始化数字控件函数,lable:控件 labelName:控件名称 rect:控件位置
    def initNumberLabel(self,label,labelName,rect):
        label.setObjectName(labelName)
        label.setGeometry(rect)
        label.setStyleSheet(
            "QLabel#"+labelName+"{color: rgb(190,200,210);"
            "}"
        )
        font = QFont('Arial', scaleSizeW(36))
        label.setFont(font)
        label.setText(' ')
        label.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)

    # 设置当前值,此方法不做校验,格式为:12345
    def setCurrentValue(self,text):
        self.label_1_1.setText(text[0])
        self.label_1_2.setText(text[1])
        self.label_1_3.setText(text[2])
        self.label_1_4.setText(text[3])
        self.label_1_5.setText(text[4])

    # 设置基准值,此方法不做校验,格式为:12345
    def setReferentValue(self,text):
        self.label_2_1.setText(text[0])
        self.label_2_2.setText(text[1])
        self.label_2_3.setText(text[2])
        self.label_2_4.setText(text[3])
        self.label_2_5.setText(text[4])

    # 设置倍数值,此方法不做校验,格式为:543
    def setMultipleValue(self,text):
        self.label_3_1.setText(text[0])
        self.label_3_2.setText(text[1])
        self.label_3_3.setText(text[2])

    def update_values(self):
        number = random.randint(0, 100)
        self.equalizer.setValues(number)

        number2 = random.randint(10000, 99999)
        self.setCurrentValue(str(number2))

        number3 = random.randint(10000, 99999)
        self.setReferentValue(str(number3))

        number4 = random.randint(100, 999)
        self.setMultipleValue(str(number4))


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))


class MyWindow(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)
        self.set_steps(20, 40)
        self.setupUi(self)

        # 测试数据
        self._timer = QtCore.QTimer()
        self._timer.setInterval(100)
        self._timer.timeout.connect(self.update_values)
        self._timer.start()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    desktop = QApplication.desktop()
    print("屏幕宽:" + str(desktop.width()))
    print("屏幕高:" + str(desktop.height()))
    setDesktop(desktop)

    app.setStyleSheet(StyleSheet)
    app.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)
    myWin = MyWindow()

    myWin.showFullScreen()
    sys.exit(app.exec_())
