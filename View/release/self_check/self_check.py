# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ViewSelfcheck.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import QTimer, Qt
from PyQt5.QtGui import QPixmap, QMovie
from PyQt5.QtWidgets import QMainWindow, QApplication

from Utils.Path import rootPath
from Utils.ResolutionTools import setDesktop, scaleSizeW, scaleSizeH, resolutionW, resolutionH
from View.custom_widget.MsgBoxDialog import MsgBoxDialog
from View.custom_widget.PercentProgressBar import PercentProgressBar
from View.custom_widget.SimpleProgressBar import SimpleProgressBar, StyleSheet
from View.custom_widget.WaterRippleProgressBar import WaterRippleProgressBar

# 图片所在路径
imgPath = rootPath + "/View/img"


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setStyleSheet(
            "QMainWindow#MainWindow{border-image: url(" + imgPath + "/common/bg.png);}")

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # 项目1
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setPixmap(QPixmap(imgPath + "/selfcheck/待自检_41.png"))
        self.label.setGeometry(QtCore.QRect(scaleSizeW(167), scaleSizeH(186), scaleSizeW(288), scaleSizeH(56)))
        self.label.setObjectName("label")

        # 项目2
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setPixmap(QPixmap(imgPath + "/selfcheck/待自检_50.png"))
        self.label_2.setGeometry(QtCore.QRect(scaleSizeW(167), scaleSizeH(263), scaleSizeW(288), scaleSizeH(56)))
        self.label_2.setObjectName("label_2")

        # 项目3
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setPixmap(QPixmap(imgPath + "/selfcheck/待自检_55.png"))
        self.label_3.setGeometry(QtCore.QRect(scaleSizeW(167), scaleSizeH(339), scaleSizeW(288), scaleSizeH(56)))
        self.label_3.setObjectName("label_3")

        # 项目4
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setPixmap(QPixmap(imgPath + "/selfcheck/待自检_59.png"))
        self.label_4.setGeometry(QtCore.QRect(scaleSizeW(167), scaleSizeH(416), scaleSizeW(288), scaleSizeH(56)))
        self.label_4.setObjectName("label_4")

        # 激光状态
        self.label_light_switch = QtWidgets.QLabel(self.centralwidget)
        self.label_light_switch.setPixmap(QPixmap(imgPath + "/common/light_switch_false.png"))
        self.label_light_switch.setGeometry(QtCore.QRect(scaleSizeW(1021), scaleSizeH(97), scaleSizeW(190), scaleSizeH(50)))
        self.label_light_switch.setObjectName("label_light_switch")

        # 后门按钮
        self.back_door_btn = QtWidgets.QPushButton(self.centralwidget)
        self.back_door_btn.setGeometry(QtCore.QRect(scaleSizeW(1023), scaleSizeH(97), scaleSizeW(190), scaleSizeH(50)))
        self.back_door_btn.setObjectName("back_door_btn")
        # 设置按钮透明
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0)
        self.back_door_btn.setGraphicsEffect(op)
        self.back_door_btn.setAutoFillBackground(True)

        # 提示框
        self.label_tip = QtWidgets.QLabel(self.centralwidget)
        self.label_tip.setScaledContents(True)
        # 样式
        self.label_tip.setStyleSheet("QLabel{border-image: url(" + imgPath + "/selfcheck/提示_03.png);}"
                                     "QLabel{color:rgb(255,255,255,250);font-size:20px;font-weight:bold;font-family:Roman times;padding:40px 15px 20px 15px;}")
        self.label_tip.setGeometry(QtCore.QRect(scaleSizeW(926), scaleSizeH(243), scaleSizeW(282), scaleSizeH(174)))
        # 文字居中
        self.label_tip.setAlignment(Qt.AlignCenter)
        # 长文本自动换行
        self.label_tip.setWordWrap(True)
        self.label_tip.setObjectName("label_tip")
        self.label_tip.hide()

        # 条形进度条
        self.progressBar = SimpleProgressBar(self, minimum=0, maximum=100, textVisible=False,
                                             objectName="SelfcheckProgressBar")
        self.progressBar.setGeometry(QtCore.QRect(scaleSizeW(60), scaleSizeH(640), scaleSizeW(1160), scaleSizeH(20)))
        self.progressBar.setObjectName("SelfcheckProgressBar")

        # 圆形进度条
        self.progressBar_2 = PercentProgressBar(self, borderWidth=4, showFont=False, showSmallCircle=False,
                                                showFreeArea=True)
        self.progressBar_2.setGeometry(QtCore.QRect(scaleSizeW(594), scaleSizeH(228), scaleSizeW(203), scaleSizeH(203)))
        self.progressBar_2.setObjectName("progressBar_2")

        # 波浪进度条
        self.progressBar_3 = WaterRippleProgressBar(self)
        if resolutionW() == 1280 and resolutionH() == 800:
            self.progressBar_3.setGeometry(
                QtCore.QRect(scaleSizeW(614), scaleSizeH(256), scaleSizeW(164), scaleSizeH(164)))
        else:
            self.progressBar_3.setGeometry(
                QtCore.QRect(scaleSizeW(614), scaleSizeH(248), scaleSizeW(164), scaleSizeH(164)))
        self.progressBar_3.setObjectName("progressBar_3")

        # 圆环背景
        self.label_circle = QtWidgets.QLabel(self.centralwidget)
        if resolutionW()/1280 == resolutionH()/720:
            self.label_circle.setScaledContents(True)
        self.label_circle.setPixmap(QPixmap(imgPath + "/selfcheck/圆_050.png"))
        self.label_circle.setGeometry(QtCore.QRect(scaleSizeW(527), scaleSizeH(162), scaleSizeW(340), scaleSizeH(340)))
        self.label_circle.setObjectName("label_circle")

        # 进度1
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setScaledContents(True)
        self.label_6.setGeometry(QtCore.QRect(scaleSizeW(75), scaleSizeH(187), scaleSizeW(50), scaleSizeH(45)))
        self.label_6.setObjectName("label_6")

        self.gif = QMovie(imgPath + "/selfcheck/自检动画.gif")
        self.label_6.setMovie(self.gif)
        self.gif.start()

        # 进度2
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setScaledContents(True)
        self.label_7.setGeometry(QtCore.QRect(scaleSizeW(75), scaleSizeH(263), scaleSizeW(50), scaleSizeH(65)))
        self.label_7.setPixmap(QPixmap(imgPath + "/selfcheck/自检状态_03-12.png"))
        self.label_7.setObjectName("label_7")

        # 进度3
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setScaledContents(True)
        self.label_8.setGeometry(QtCore.QRect(scaleSizeW(75), scaleSizeH(339), scaleSizeW(50), scaleSizeH(65)))
        self.label_8.setPixmap(QPixmap(imgPath + "/selfcheck/自检状态_03-12.png"))
        self.label_8.setObjectName("label_8")

        # 进度4
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setScaledContents(True)
        self.label_9.setGeometry(QtCore.QRect(scaleSizeW(75), scaleSizeH(416), scaleSizeW(50), scaleSizeH(65)))
        self.label_9.setPixmap(QPixmap(imgPath + "/selfcheck/自检状态_03-12.png"))
        self.label_9.setObjectName("label_9")

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def updateValue(self):
        # 条形设值
        value_all = self.progressBar.value() + 1

        if value_all > self.progressBar.maximum():
            value_all = 0
        self.progressBar.setValue(value_all)

        # 波浪设值
        value = self.progressBar_3.value() + 1
        if value > self.progressBar_3.maximum():
            value = 0
        self.progressBar_3.setValue(value)

        # 圆形设值
        self.progressBar_2.value = self.progressBar_2._value
        self.progressBar_2._value += 1
        if self.progressBar_2._value > 100:
            self.progressBar_2._value = 0

    def update_value(self, current, maximum=100):
        """
        更新进度条数据
        :param current: 当前值
        :param maximum: 最大值
        """
        # 更新值
        if current > maximum:
            current = maximum
        if current < 0:
            current = 0
        value = int(current * 100 / maximum)

        # 条形设值
        self.progressBar.setValue(value)
        # 圆形设值
        self.progressBar_2.value = value
        # 波浪设值
        self.progressBar_3.setValue(value)


class MyWindow(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)
        self.setupUi(self)

        # 动态设置进度条的值,测试用
        self._valueTimer = QTimer(self, timeout=self.updateValue)
        self._valueTimer.start(100)

        self.installDialog = MsgBoxDialog(
            "装配完成",
            "装配完成后点击确认按钮",
            None, None,
            "装配完成", self.right_slot
        )
        # self.installDialog.show()

        self.label_tip.show()
        self.label_tip.setText("我这里是提示框哦")

    def right_slot(self):
        print("装配完成")


if __name__ == '__main__':
    app = QApplication(sys.argv)
    desktop = QApplication.desktop()
    print("屏幕宽:" + str(desktop.width()))
    print("屏幕高:" + str(desktop.height()))
    setDesktop(desktop)

    app.setStyleSheet(StyleSheet)
    app.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)
    myWin = MyWindow()
    myWin.showFullScreen()
    sys.exit(app.exec_())
